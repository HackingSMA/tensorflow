From the root of the repo execute the following:

# start clean
git reset --hard HEAD
git clean -fxd

# get rid of /opt/local/lib library paths (prevents linking with wrong zlib)
unset DYLD_FALLBACK_LIBRARY_PATH
unset LIBRARY_PATH

./tensorflow/contrib/makefile/download_dependencies.sh
./tensorflow/contrib/makefile/rename_protobuf.sh
./tensorflow/contrib/makefile/compile_ios_protobuf.sh
export HOST_NSYNC_LIB=`tensorflow/contrib/makefile/compile_nsync.sh`
export TARGET_NSYNC_LIB=`tensorflow/contrib/makefile/compile_nsync.sh -t ios`

tensorflow/contrib/makefile/compile_ios_tensorflow.sh -f "-Os" -h $HOST_NSYNC_LIB -n $TARGET_NSYNC_LIB -a "x86_64 armv7 arm64"
*** THIS WILL FAIL (that's expected) ***


find tensorflow/contrib/makefile/gen/ -type f \( -name "*.cc" -or -name "*.h" \) -exec sed -i '' 's%\([ :&(<]\)protobuf_%\1protobuf3_%g' {} \;
tensorflow/contrib/makefile/compile_ios_tensorflow.sh -f "-Os" -h $HOST_NSYNC_LIB -n $TARGET_NSYNC_LIB -a "x86_64 armv7 arm64"

# package desired architectures, rename and copy into a single directory
mkdir ios
cp ./tensorflow/contrib/makefile/gen/lib/libtensorflow-core.a ios
lipo -create -output ./ios/libnsync.a ./tensorflow/contrib/makefile/downloads/nsync/builds/x86_64.ios.c++11/libnsync.a ./tensorflow/contrib/makefile/downloads/nsync/builds/armv7.ios.c++11/libnsync.a ./tensorflow/contrib/makefile/downloads/nsync/builds/arm64.ios.c++11/libnsync.a 
lipo -create -output ./ios/libprotobuf3-lite.a ./tensorflow/contrib/makefile/gen/protobuf_ios/lib/iossim_x86_64/lib/libprotobuf-lite.a ./tensorflow/contrib/makefile/gen/protobuf_ios/lib/ios_arm7/lib/libprotobuf-lite.a ./tensorflow/contrib/makefile/gen/protobuf_ios/lib/ios_arm64/lib/libprotobuf-lite.a
lipo -create -output ./ios/libprotobuf3.a ./tensorflow/contrib/makefile/gen/protobuf_ios/lib/iossim_x86_64/lib/libprotobuf.a ./tensorflow/contrib/makefile/gen/protobuf_ios/lib/ios_arm7/lib/libprotobuf.a ./tensorflow/contrib/makefile/gen/protobuf_ios/lib/ios_arm64/lib/libprotobuf.a
